import
	boot1
	boot2

write $a -->
	{ Node.Replace(ref that, $1); return true; } 
			$a

($a --> $b) -->
	rule
		read $a
		write $b

/*
module_name -->
	#eval { ctx.ModuleName }

==>

rule
	read module_name
	{ Node x = ctx.ModuleName; }
	write 

gen $a -->
	#eval { ctx.GeName($a) }

private ->
	add
		: id #(gen module_name)

*/

remove -->
	{ that.Remove(); that = null; return true; }

module
	: id boot3_1
	citrom $ $a -->
		{ Node #1 = cur; }
			$a

import boot3_1

sample
	citrom $b
	